JLJac
262

Offset texture sounds like a good idea - it&#039;s basically just a 2D lookup table, right? <br><br>Now, specifically how specifically would I use it? Say that I have a texture where the r channel of each pixel represents ...<br><br>HEY hold on a minute! That function 0.275*pow(dst, 3.14) you posted actually yields a VERY similar result to the original one! I could totally roll with that! So, let&#039;s inverse it then &nbsp;<img src="https://web.archive.org/web/20210308165327im_/https://forums.tigsource.com/Smileys/derek/grin.gif" alt="Grin" border="0"> That would be a pretty simple log calculation, right? <br><br><br>EDIT: Using the wolfram alpha inverterter I got an inverted function:<br><img src="https://web.archive.org/web/20210308165327im_/https://www5b.wolframalpha.com/Calculate/MSP/MSP541i2b3479i14ibb09000033if83e2f56g0dee?MSPStoreType=image/gif&amp;s=53&amp;w=546.&amp;h=348.&amp;cdf=Resizeable" alt="" border="0"><br>however I can&#039;t seem to be able to milk it for the right results - guess I just lack knowledge on how to apply it -.- Just doing a straight up displacement using that new curve obviously doesn&#039;t work because as you can see from its convex shape I get super much displacement in the center of the image, which is the opposite of how the displacement in the shader goes about. <br><br>Will have to ponder it a bit!