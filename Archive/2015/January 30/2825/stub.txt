JLJac
141

Yeah, originally I had the color gradient the other way around, so that it came out black and then got lighter, which was nice because it created a fade-y sort of effect without actually using alpha. But then I switched it, because I wanted the smoke to be more visible. All of this cosmetic stuff is super subject to change. I just had to make some decisions to get the gifs together for the kickstarter update.<br><br><b>Programming question:</b><br>The sky highway stuff meant I had to mess around with the AI prebaking a bit again, and when I&#039;m in there I thought I might as well add a thing I&#039;ve been wanting for when doing some of the critters&#039; AI.<br><br>Basically what I&#039;m after is a map that describes <i>how many tiles are visible from each tile</i>. I want this because if you have for example a predator hanging out in a room, somewhat idly looking for prey, it makes sense for it to chill in some high up place where it can see a lot of its surroundings should something pass by. Contrary, a sneaky or scared creature that wants to lose a predator hunting it should probably gravitate towards narrow corridors and sheltered areas.<br><br>The brute force to do this is simple: We&#039;re at tile (x, y). From here, we do a ray trace to every other tile in the room - if it&#039;s visible, we increment a value, otherwise not. Then we move on to (x+1, y), repeat.<br><br>This seems pretty wasteful though, because once we&#039;ve hit a tile we already know that none of the tiles behind it will be visible either. I know that many roguelikes do this exact sort of thing with their field of view algorithms, so I&#039;m gonna look at what the roguelike people have to say about it. But if any of you have some article or tutorial that&#039;s just perfect, please point me to it!&nbsp; <img src="https://web.archive.org/web/20210309172748im_/https://forums.tigsource.com/Smileys/derek/hand-thumbsup-r.gif" alt="Hand Thumbs Up Right" border="0">