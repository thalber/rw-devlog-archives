JLJac
165

Some of the regions are loosely rooted in old concepts from the tiny world attached to the lingo build - in which a region was generally no bigger than 3-4 screens. For example the lingo world had a region called Chimney Canopy which actually looked more like what Sky Islands will look like, as well as some hints at Suburban and Garbage Waste like areas. But pretty much all of what you&#039;ll see in the final game will be James&#039; creations, a majority of the areas James has come up with have no equivalent in the lingo build, and those that have have bloomed and developed vastly since. The lingo world was about 20 rooms if I remember correctly, whereas James estimates the Unity world to be around 700 rooms. So yeah, maybe there were some little sparks in there long ago, but for all practical purposes James has built this world ground-up. <br><br>For creatures, the ideas of the lingo-era were humble as well. Most of it has developed post-kickstarter, and quite a lot of the creature ideas are not solely mine any more, rather they&#039;re a blend of James&#039; ideas for what would go well with the regions mixed up with the backer suggestions. We have quite a lot of backer suggestions, so we generally try to combine them with James&#039; region-specific requests whenever possible. I definitely have the final touch and most of the control of how creatures will look and behave, but the seeds for the ideas generally come from elsewhere now. For example, the Vulture came out of James wanting a big flying predator for the aerial regions, but from this rather loose concept the actual creature grew out of back-and-forth between me and the computer, trying out what worked, what looked good, and so on. The designs are generally like this, not super goal oriented but rather a dance with the technical limitations. <br><br>I really like this, and think it&#039;s one of the great benefits of being both artist and programmer - I don&#039;t have to draw something and imagine exactly how it should be just to later be disappointed by the implementation, and conversely I don&#039;t have to try to program a creature that might not work technically in order to meet an artist&#039;s expectations. Instead I can explore a lot of technical possibilities while constantly re-evaluating the artistic idea in order to find the place where it looks best.<br><br>On the UI stuff, I don&#039;t quite know... I don&#039;t want to mess with the Slugcat&#039;s appearance too much, as its silhouette is kind of iconic and I wouldn&#039;t want it to spend the majority of its time distorted by status effects that might make it less aesthetically pleasing - this is after all the character you look at 90% of the time you play, and the proportions are quite fine-tuned to be where I like to have them, so if I can avoid skewing them I will. Also we have this thing with no health bar and no lasting status effect - I want your state to be binary dead/alive, because I think it feels freer and less claustrophobic that way. If you&#039;re alive, you have as good a chance as ever, if you&#039;re dead, you&#039;re dead. No weird grey areas in-between. The exception would be the leeches, they could be argued to be a sort of &quot;status effect&quot; as they slow you down in the water, but this follows a very clear causality which you can observe with your eyes.<br><br>But, haha, I don&#039;t really have any good ideas myself for the UI thing. Surely some sort of symbol (just 5 dots or similar) should be better than straight up arabic numerals, but hopefully there are other options as well. Just having the slugcat refuse to eat more bats once you&#039;ve caught enough is a possibility, but that solution really communicates nothing but the absolute bare-bones tiniest amount of information you need to survive - it would be pretty nice to know what amount of bats you need as you set out on your hunt. Another possibility is to have it always be the same amount of bats, but I don&#039;t know how well that&#039;d work with the level design. 