JLJac
141

<div class="quoteheader"><a href="https://web.archive.org/web/20210309172748/https://forums.tigsource.com/index.php?PHPSESSID=a5pefvk5asmou1oppf61e58a37&amp;topic=25183.msg1105196#msg1105196">Quote from: Slader16 on January 30, 2015, 09:32:49 PM</a></div><div class="quote">Hey Joar, where should I start if I want to be as smart as you someday?&nbsp; <img src="https://web.archive.org/web/20210309172748im_/https://forums.tigsource.com/Smileys/derek/whome.gif" alt="Who, Me?" border="0"> <br></div><br>Aw you! But in all seriousness though, eat your vitamins and worship Cthulhu. <br><br><div class="quoteheader"><a href="https://web.archive.org/web/20210309172748/https://forums.tigsource.com/index.php?PHPSESSID=a5pefvk5asmou1oppf61e58a37&amp;topic=25183.msg1105237#msg1105237">Quote from: Gimym JIMBERT on January 31, 2015, 12:25:52 AM</a></div><div class="quote">Visibility map = a sort of ambient occlusion without distance weighting ...<br><br>... that&#039;s an interesting concept, also reminiscent of distance map<br><br>... just that &quot;shape&quot; of the map is something a bit different<br></div><br>Ah so that&#039;s how ambient occlusion works! Makes sense! What&#039;s a distance map though? (google only gives me nonsense)<br><br><b>Programming question: (which is more about like, what&#039;s good practice rather than solving a problem)</b><br>Ok, so I&#039;m redoing some architecture of the &quot;abstract space&quot; part of the game to make way for &quot;sky highway&quot;, and in the process I&#039;m tidying up a bit to make room for further such adjustments down the line, because there&#039;s gonna be <i>something</i>. <br><br>Previously an abstract room had &quot;nodes&quot;, each node represented either a room exit or a creature den. Now I&#039;ve added new types of nodes, such as bat hives and sky highway nodes. This means that now there are different amounts of nodes in each room depending on which creature is asking - no other critters than bats should care about bat hives, for example.<br><br>So, all the nodes are sitting in a list, labeled 0, 1, 2 etc. When critters access this list though, they use creature specific labels, because to some of the critters some of the nodes don&#039;t exist.<br><br>Sooooooo basically I have &quot;global&quot; node indexes and &quot;creature specific&quot; node indexes, and a method to convert between them. They&#039;re just integers, and I&#039;m suuuuuper prone to mixing them up all the time. I name some variable &quot;nodeIndex&quot; thinking that it&#039;s totally obvious which of the two types it is, but then feed it into the wrong method etc etc.<br><br>So I had this idea, that I would create two structs, each containing only an integer, GlobalNodeIndex and SpecificNodeIndex or something like that. A conversion method would be the only place to change between them, and all methods could specify and enforce which one they wanted. <br><br>Is this a cool idea? Do people do stuff like that? It&#039;s obviously not as fast as just going with ints, but it&#039;s not really performance critical code anyways. 