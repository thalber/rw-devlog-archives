JLJac
64

Thanks! I like it too, so far!<br><br>Hm... On the subject of draw calls. I noticed that unity has a little thingie in the top left where you can see the number of draw calls. I decided to check that out, and made it so that my moving sprites got their textures from two different atlases, assigned randomly. <br><br>Instead of 2 draw calls, I got some random number in between 1 and the number of sprites I use, which made me think that it goes through them one by one and every time one of them uses a different texture from the last one, it unloads the old texture and loads the new texture, creating an new draw call. Surprisingly this didn&#039;t seem to affect performance at all, but my sprites are pretty light weight. <br><br>Is my theory correct? In that case, is there some way to manage the draw calls, so that you put all the sprites using one specific atlas in an uninterrupted queue before moving to the next one, getting only one draw call per atlas? Do I need to care, it seems to run just fine?<br><br>Another question that&#039;s more relevant to my game making stuff rather than optimization - how do you sort sprites? I&#039;ll give you a super simple example just so you know what I&#039;m after:<br><br>Say that you have bouncing balls, and each ball have a shadow (2 separate sprites). You don&#039;t care about the internal order of the ball sprites or the shadow sprites, but you want <i>every ball to be above every shadow</i>. When you create a new ball its shadow should be in the &quot;shadow layer&quot; behind all the other balls.<br><br>Unity has some kind of layer functionality, right? Can I tap into that from Futile? Can I nest layers within each other?