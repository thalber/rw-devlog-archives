JLJac
64

Oh, so unity already has a thing for distances between vectors!? And also for normalizing! And a bunch of other stuff! So cool <img src="https://web.archive.org/web/20150102091221im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0"><br><br>The Unity built in Distance function wasn&#039;t much faster than my home made pythagoras theorem function though, in the end I guess they do the same thing. Concerning optimization, I don&#039;t think space partitioning would really be a good bargain in Rain World - mostly there are relatively few collidable objects at a time (10-50 rather than 100-500), and keeping track of which zone they&#039;re in might even be more of a hassle to them than just checking against each other.<br><br>Each RW creature consists of several parts. In the old engine I optimize by doing a rough check where I use something I call a &quot;distanceWithin&quot; function, essentially pythagoras theorem but by having a defined compare radius (I&#039;m not interested in what the distance is specifically, just if it&#039;s smaller or greater than this radius) I can avoid doing the square root. So I check from one of the body parts in one creature to one of the body parts in the other creature, and only if that distance is smaller than say 8 tiles I actually check all the body parts against each other. This worked OK, so I could do something similar here. But, as Gimym JIMBERT says, I probably shouldn&#039;t get stuck in premature optimization. It&#039;s better to make the game run, and look into optimization when you actually need it.<br><br><div class="quoteheader"><a href="https://web.archive.org/web/20150102091221/http://forums.tigsource.com/index.php?topic=25183.msg996603#msg996603">Quote from: dancing_dead on February 18, 2014, 04:11:32 AM</a></div><div class="quote">dot products, cross products<br></div>? ? ?<br>Keep talking!