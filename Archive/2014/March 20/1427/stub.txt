JLJac
71

Cool! So, what&#039;s the deal with properties? I&#039;ve been told to use them, but I&#039;m still not 100% on why they&#039;re so useful - I can use them to make the get public but the set private, which is cool I guess, but I never really had any problems with accidentally changing numbers from outside, so I don&#039;t think it&#039;s that crucial. And then I can also, in the future, add weird little behaviors whenever a certain property is accessed, (playing a sound when score is increased or something I guess) but I&#039;m not entirely sure I see the usefulness in that either... Like, I don&#039;t want to play the pling EVERY time I change the score, for example it should be quiet if I just restart a game session. So then I might as well play the sound manually when I also add the score, right?&nbsp; <br><br>Oh, and when I have you here, what&#039;s the deal with naming conventions? The c# documentation seems to be saying different things. At one point they say &quot;no underscores, Pascal capitalization&quot; another time they write in one of their examples something like<br><br><div class="codeheader">Code:</div><div class="code">private int _score;<br>public Score{get{return _score;} set{_score = value;}}</div><br>And leave me super confused. They say that I should name properties with Capital Letters, but then I can&#039;t use the same name for a class and an instance, right<br><div class="codeheader">Code:</div><div class="code">Public Room Room = new Room();</div>that doesn&#039;t work, does it? Then I should call it MyRoom or something, and that seems strange. Can I rely on the case sensitivity and do things like<br><div class="quoteheader">Quote</div><div class="quote">Room room = new Room();</div>or is that considered unsafe?<br><br>Tell me how you name stuff <img src="https://web.archive.org/web/20150101015922im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0">