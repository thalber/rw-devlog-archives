JLJac
71

<b>Update 221</b><br><br>Hi there! I won&#039;t share <i>all </i>of my code hehe, but here&#039;s a sample I&#039;ve written of my Room class so far. If any of you guys feel like looking at it and be my ground control so I&#039;m not floating away into crazyness right from the start, it would be greatly appreciated. Anything I&#039;m doing a weird or peculiar way, let me know! <img src="https://web.archive.org/web/20150101015922im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0"><br><br>I&#039;m especially interested in if I got the overloading right (GetTile functions). The code executes, but I&#039;d just want to know if I&#039;m using it correctly and as intended. <br><br>Also, having Tile as a mini class inside Room, good or bad?<br><br><div class="codeheader">Code:</div><div class="code">using UnityEngine;<br>using System.Collections;<br>using RWCustom;<br><br>public class Room<br>{<span style="white-space: pre;"> </span><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//Setting up properties for width and height of the room, and functions to get height and width as tiles or pixels<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>private int Width;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>private int Height;<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public int TileWidth{ get { return Width; } }<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public int TileHeight{ get { return Height; } }<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public float PixelWidth{ get { return (float)Width * 20f; } }<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public float PixelHeight{ get { return (float)Height * 20f; } }<br><span style="white-space: pre;"> </span><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//2D array that holds the tiles<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>private Tile[,] Tiles;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//DefaultTile is the template tile that occupies any position outside of the room (used when indexes are outside the Tiles array)<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>private Tile DefaultTile;<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public Room ()<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Height = 40;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Width = 52;<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//Creating Tiles array and filling it with Tile instances<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Tiles = new Tile[Width, Height];<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>for (int x = 0; x &lt; Width; x++) {<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>for (int y = 0; y &lt; Height; y++) {<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Tiles [x, y] = new Tile (x, y, Tile.TerrainType.Air);<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//Defining DefaultTile<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>DefaultTile = new Tile (-1, -1, Tile.TerrainType.Air);<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public void Update ()<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>// Returns the tile which is occupied by position given as a 2D vector<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public Tile GetTile(Vector2 pos)<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>return GetTile ((int)(pos.x / 20f), (int)(pos.y / 20f));<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//Returns a tile from Tiles<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public Tile GetTile (int x, int y)<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>if (x &gt; -1 &amp;&amp; y &gt; -1 &amp;&amp; x &lt; Tiles.GetLength (0) &amp;&amp; y &lt; Tiles.GetLength (1)) {<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>return Tiles [x, y];<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>} else {<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>return DefaultTile;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><span style="white-space: pre;"> </span><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public class Tile<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//Defining enum for terrain types and creating property to hold it<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public enum TerrainType<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Air,<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Solid<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public TerrainType Terrain{ get; private set; }<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>//The location of this current tile in in Tiles array<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public int X{ get; private set; }<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public int Y{ get; private set; }<br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>public Tile (int x, int y, TerrainType tType)<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>{<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>X = x;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Y = y;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>Terrain = tType;<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span>}<br><br><br><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><span style="white-space: pre;"> </span><br>}<br><br><br>//Example command: Debug.Log (Rooms [0].GetTile (new Vector2 (234f, 101.6f)).Terrain);<br>//Output: Air<br>//It seems to work!<br><br></div><br>So much fun to have gotten started!