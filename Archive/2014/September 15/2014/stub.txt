JLJac
100

<b>Update 307</b><br>I spent the day trying to accomplish serialization of a class, as that was going to be a time saver I believed&nbsp; <img src="https://web.archive.org/web/20141228135550im_/http://forums.tigsource.com/Smileys/derek/cheesy.gif" alt="Cheesy" border="0"> Serialization is basically that an object is converted to text (which can be stored in a text file, for example) and then converted back to an object again. My idea here was that I was going to save the AI maps like that. After having broken my game pretty badly it became more about trying to patch it back together again, something which was made harder by not being able to make visual studio break at exceptions, and... Yeah you get it! <br><br>The end result was that I actually managed to make the serializer spit out some text, but way less than what could possibly contain the data I was trying to store (just the names of the classes I was serializing, basically. And some.... web url!? Idk.) To serialize an object I also have to adapt in a lot of wonky ways, like having an empty constructor etc. Also, all objects that are stored in the serializable object also have to be serializable... Basically, at the end of the day, I think it&#039;s going to be more efficient for me to just make my own method for converting my data to text and back again. Also, that way I will positively know that it&#039;s not storing something I didn&#039;t ask it to, such as strange web URLs and the like.<br><br>The only problem I can see is that I need to store some floats. Integers will become 1, 2, 3 or 4 ascii characters, which is kind of wasteful with space but still within the realm of the reasonable. For floats however, if I want to save them with somewhat good granularity, I have to use like 6 characters for each, which seems horribly wasteful compared to the fact that a float is actually no bigger than an int in raw data.<br><br>Does anyone know of any cool ways of converting ints and floats to ascii text that isn&#039;t horribly wasteful? Maybe you could make a huge BitArray, feed it all the ints or floats or whatever, then cut it up in pieces of however many bits make up an ascii character and just put that character in the text file? That would surely be using the space to 100%, right?<br><br>A pretty frustrating day. It never cheers me up when what I&#039;m fighting with isn&#039;t an actual logical problem, but the functionality created by the microsoft people - all due respect though, everything they&#039;ve made that&#039;s streamlined and easy to use I obviously never even notice. The day wasn&#039;t all bad though. I did get some pretty nice restructuring done when it comes to &quot;preprocessing&quot; levels, ie finding out AI information about them and saving that to the text files. Also I solved the curve problem of this morning, and made a curve visualization tool that I&#039;m going to have a lot of use for in the future:<br><br><img src="https://web.archive.org/web/20141228135550im_/http://imgwiz.com/images/2014/09/15/vz8jP.gif" alt="" border="0"><br><br>Over and out!