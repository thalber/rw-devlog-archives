JLJac
100

Ok, so here&#039;s a technical question.<br><br>These maps take too long to calculate, so I&#039;ll just do it once on the first time the level is loaded, the write it back to the level file and have it hang out there.<br><br>When I calculate these maps a by-product of that process is a dijkstra map for each exit in the room as calculated for each creature. This is really useful info to the AI, it could do a lot more and a lot faster if it had access to it. Sooo, I&#039;m thinking about perhaps storing that as well, when I&#039;m at it?<br><br>Say that a standard level is 50*40 = 2 000 tiles.<br><br>Say that I end up with worst case 15 creature types that need to do these calculations. Some creatures share maps as they have the same basic movement, so it&#039;ll probably not be that much.<br><br>Say that a room has 4 exits, all of which I&#039;m saving a map for. Then I&#039;m also saving the dead end map, so 5 maps all in all.<br><br>2000 * 15 * 5 = 150 000<br><br>So, a hundred and fifty thousand integers. If the level is bigger, or there are more exits, that number could be even more crazy. If the level is 100*80 instead, we end up at 600 000 integers.<br><br>The level text file I have currently is at something like 4kb, and contains something like 3000 integers to store the level geometry. So by that estimation a 150 000 integer level would end up at... 200kb. That doesn&#039;t seem too bad? Modern computers have gigabytes of RAM, they should be able to hold those amounts of data? The bigger level ends up at about a meg. <br><br>What do you guys think? Is this viable? It seems like such massive numbers. It also kind of is a waste, as not all creatures are in all levels. Also, if you look at the screenshots above you&#039;ll notice how in the most cases the majority of tiles are not accessible, meaning that a majority of these numbers would just be zeroes.<br><br>When loading a level its text content is held in memory, then converted to rain world code objects. Then that text is discarded. Is that a huge hit for garbage collection? When the game starts up each level is loaded once to retrieve some data from it, and if there are hundreds of levels I worry GC could get overwhelmed.<br><br>Is having all those integers in memory during play a performance problem in itself?<br><br>Thankful for all advice!