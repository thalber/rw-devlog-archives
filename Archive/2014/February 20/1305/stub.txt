JLJac
65

<div class="quoteheader"><a href="https://web.archive.org/web/20150102024711/http://forums.tigsource.com/index.php?topic=25183.msg996934#msg996934">Quote from: Bandreus on February 19, 2014, 03:38:04 AM</a></div><div class="quote"><a href="https://web.archive.org/web/20150102024711/http://gameprogrammingpatterns.com/" target="_blank">http://gameprogrammingpatterns.com/</a></div><br>This is amazing! So much useful stuff! Interestingly it seems I have already been using some of these methods, but without knowing the name for them. So maybe I don&#039;t need to worry too much about my intuition taking me bad places. But much of the stuff he&#039;s talking about is obviously more refined than my own home-brewn solutions, and I feel like I&#039;m really learning a lot reading this. I&#039;ll make a list of the things I find particularly interesting and see if I can find implementations for them in C# specifically, some of the stuff I&#039;ve encountered here I suspect might be C++ specific. Do you know of any more resources such as this? It&#039;s a good read <img src="https://web.archive.org/web/20150102024711im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0"><br><br><div class="quoteheader"><a href="https://web.archive.org/web/20150102024711/http://forums.tigsource.com/index.php?topic=25183.msg996934#msg996934">Quote from: Bandreus on February 19, 2014, 03:38:04 AM</a></div><div class="quote">Remember you already implemented Rain World, though in another engine. So it&#039;s just a matter of porting stuff over and having it to work in a new environment, rather than 100% rebuilding it from the ground up.<br><br>That&#039;s assuming rebuilding the game from scratch is not what you&#039;re looking forward to.<br></div>No, I&#039;m not going to re-create the game from scratch, and it will probably be a lot faster the second time around because instead of going through this process:<br>&nbsp; Decide on what I want to create<br>&nbsp; Figure out a solution on how to implement that<br>&nbsp; Implement the solution<br>&nbsp; Iterate, iterate, iterate, iterate<br>I&#039;ll be cutting that down to just<br>&nbsp; Figure out how this will work in C# (mostly the same)<br>&nbsp; Implement<br><br>However I will do some restructuring, because the old engine didn&#039;t use inheritance and thus had a lot of redundant code. That&#039;s mostly because I didn&#039;t have overview of what I wanted in the game, I just added things one by one, giving each its own solutions to basically the same problems. In hindsight I understand, for example, that the players&#039; forepaws shares a lot of behavior with the lizards&#039; legs, and because I know that both of those entities will be in the game already, I can plan around that.