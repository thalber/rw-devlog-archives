JLJac
89

Your ideas line up very well with what we&#039;ve been talking about, so I think you won&#039;t be disappointed <img src="https://web.archive.org/web/20141219115758im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0"><br><br><b>Update 261</b><br>Path finding path finding path finding. As I said, this is not going to be quick and easy. Made some progress though - now the embryo of an automatically updating destination for the path finder is in. My goal is that I want to have the path finder completely self-contained. In the end the AI should only need to tell it &quot;I want to go here&quot; and get a very simple response consisting of a statement as to if that&#039;s possible and if so what direction to start moving. <br><br>I&#039;ve been thinking a little bit about threading. After looking at a few tutorials I don&#039;t think it looks <i>sooo </i>complicated... The idea I&#039;m toying with is putting the path finding in another thread. It would be so very cool to have that basically for free - it would mean much more freedom when it comes to amount of creatures on screen, and would free processing cycles for other stuff such as animation. Also it would make gameplay more fun as the enemies would have faster reaction times...<br><br>So I have a few questions about multithreading <img src="https://web.archive.org/web/20141219115758im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0"><br>1: From how I have understood it, many threads can access the same working memory. The problem with this is that a field might get changed as you do an operation on it, which is where locks come into the picture. My path finding consists of a huge map of cells per creature. If the path finding thread would <i>only write</i> to this map, and the main game thread would <i>only read</i> from it, I would theoretically not need to worry about locks, right?<br>2: When creating threads, are those automatically placed on vacant processor cores if available, or do I need to manage that somehow?<br>3: Threading surely brings compability issues, right? Feels like it would.<br><br>The other big project of the day was to install Visual Studio to try it out. Something I ended up doing no less than 5 times! I now have like, infinite versions of visual studio and trials on my computer :/ Express doesn&#039;t want to hook up with Unity because it doesn&#039;t allow extensions, so then I got trials for the pro version (2010 and 2013) but then there were problems with migrating the project... Hm. Having tried nothing but monodevelop and freaking Macromedia director I don&#039;t find monodevelop that bad, but people say VS is better, and from the very little I&#039;ve been able to try it - yeah, it seems really cool.<br><br>Then I ran into a price for the pro version if you didn&#039;t have any version already, which was at $13 000, which obviously scared me senseless. And then I also saw a thread somewhere that said that if you&#039;re developing commercial software on a trial version, you are in trouble. So I haven&#039;t really dared to try it after that, frankly. Am I too paranoid? Should I give the VS trial a go?