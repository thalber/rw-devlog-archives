JLJac
78

<b>Update 134</b><br>A very good day!<br><br>I got a good chunk of my shader done - there is still work (dynamic palettes, effect colors, the rainbow effect, etc etc) but now I know that the basics work. <br><br>The level editor encodes an image looking as such:<br><br><a href="https://web.archive.org/web/20141229083417/http://oi62.tinypic.com/jsfz86.jpg" target="_blank"><img src="https://web.archive.org/web/20141229083417im_/http://oi62.tinypic.com/jsfz86.jpg" alt="" width="400" height="300" border="0"></a><br><br>This in turn is deciphered by the shader, which can tell things such as depth, whether or not the pixel is lit, and all that stuff I mentioned in the last post.<br><br><img src="https://web.archive.org/web/20141229083417im_/http://oi57.tinypic.com/281rp6p.jpg" alt="" border="0"><br><br>The shader is also fed another texture, a palette texture which is very small. In the future I think it might be cool to be able to interpolate between different palettes, to do cool effects such as darkening as the rain comes, lightning and the such.<br><br><img src="https://web.archive.org/web/20141229083417im_/http://oi59.tinypic.com/x1ewdv.jpg" alt="" border="0"><br><br>This one has a little bit of random static in it - that will not likely stay, I&#039;m just having fun.<br><br>And, finally, I got my dynamic shadows to work!<br><br><img src="https://web.archive.org/web/20141229083417im_/http://imgwiz.com/images/2014/05/07/mCR4.gif" alt="" border="0"><br><br>Woooho! <br><br>I have it working with the normal color scheme as well, just used this wacky palette so you&#039;d see clearer. The principle is super simple: each pixel has a depth value (red in the mockup). If it&#039;s lit, it looks at a certain pixel to check if it&#039;s occupied by a sprite. Which pixel it looks at is determined by stepping backwards in the light direction.<br><br>So say that I&#039;m a lit pixel that&#039;s at a depth of 5. Then I step, for simplicity&#039;s sake, 5 pixels to the left and upwards, and ask that pixel if it has something rendered on it. If true, I become shadowed. If I&#039;m at a greater depth, I go more steps up and to the left.<br><br>It&#039;s unpolished - for example it doesn&#039;t take notice of perspective yet. If the shadows are cast straight backwards, you&#039;d want them to stretch towards the center of the screen according to perspective, right, and that&#039;s not factored in yet. But I&#039;m getting there!<br><br>Super exciting to see that it works!