JLJac
104

Yeah, it&#039;s all done from scratch. I&#039;m using Unity to handle input, it has a very convenient framework where you can just ask if a button is pressed. Also I use the unity engine for some extremely basic stuff such as float maths and random numbers, but I think there are probably a million libraries for that, so it&#039;s not really Unity specific.<br><br>The main reason why we&#039;re in Unity to begin with is to use its graphics engine to render sprites through the Futile framework. But that&#039;s some pretty basic stuff as well, importing a graphic, declaring a sprite that uses the graphic, that kind of stuff. And I have been digging a tiny little bit into that as well, doing customizations, for example the tails of the creatures are a custom version of the Futile FSprite class.<br><br>So yeah, I haven&#039;t touched the Unity Editor and it&#039;s all written in C# from scratch. That is cool and all, but it comes with its problems. For example I have my own home brewn &quot;physics engine&quot;, which is not the best all of the time for all scenarios. So, pros and cons. Because on the other hand, if there is a problem in my code, I <i>can </i>attempt to fix it, as the entire code is accessible to me.<br><br>If I got a fresh start at making games, I&#039;d probably not try to learn how to do everything myself though! I think you can achieve really cool results way more quickly by using for example the Unity Editor and presets. It&#039;s probably a way more efficient work flow, and the code doesn&#039;t end up an obscure nightmare haha!