JLJac
94

Abstract interactions would definitely be way <i>easier </i>to implement than actual realized interactions, so I&#039;m probably going to implement quite a lot of them just for the hell of it. I&#039;d post pictures, but you change the abstraction by measuring it. Actually you don&#039;t, here&#039;s my visualization of it: <br><br><img src="https://web.archive.org/web/20141223101650im_/http://oi57.tinypic.com/fbwzt2.jpg" alt="" border="0"><br><br>That&#039;s the map of the world, each column is a room. Each square is a node in that room. The rooms that have a little pink minus above them are realized. The one with the grey rectangle behind it is the one currently viewed. You see how the nodes have different colors? That&#039;s how I&#039;ve visualized the connections between rooms - the nodes in different rooms with the same colors are connected. Little orange dots are creatures, the slugcat and a lizard prototype hanging out in the other room.<br><br>Slugcat is in node 2, because that&#039;s the door it came in through when entering the room. Checking which door a creature is actually the closest to in a realized room is a pretty expensive connectivity check, so I&#039;d rather not do that every frame, and for now I haven&#039;t really come up with any scenario where assuming a creature is still hanging out in its entrance node isn&#039;t working. If such a scenario would arise though, it would be easy to just have a method call that tells every creature in a room to check against the exits and update the node map accordingly.<br><br>As you can see there would have to be hundreds of rooms before the node graph became bigger than the grid of one single room, so I feel pretty confident that the abstraction is going to be a cool feature. It will allow a vast world to exist, and to gain granularity as you get closer, making it feel like the entire thing is alive simultaneously.