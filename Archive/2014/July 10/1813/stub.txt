JLJac
90

Hehehe thanks! It&#039;s just an object that&#039;s hooked up to a path finder on initiation, and every time the path finder does something it checks if it has a draw object, and if so, throws a command at it. Not going in the game though, sorry! <br><br><b>Update 269</b><br>Today I&#039;ve been doing things too petty to really be worth a mentioning - which is a good thing, because it might mean that I&#039;m actually starting to wrap this thing up. Petty things include:<br><br>- In corners the lizard would believe that a path was accessable, and for one tick follow it, leading to the path being abandoned because it was &quot;already complete and being followed&quot;. Took some very intense staring at a weird little squiggle in my note book until I figured that one out. If I ever did, but the bug went away.<br><br>- Right from the start when a new goal is being designated, it checks if that tile is reachable. If not, a &quot;looking for the closest possible I can get to this point that I know I can&#039;t actually reach&quot; bool is set to true, and the path finder follows slightly different rules. For example, if it <i>knows </i>that it will be able to reach the destination, it doesn&#039;t even check tiles that are not marked as reachable - they&#039;re just a waste of time and memory.<br><br>- When setting a new destination, it checks that this isn&#039;t already the Destination or NextDestination, and thus saves expensive connectivity checks.<br><br>On a slightly more interesting note, I&#039;ve done some actual behavior - though I&#039;m probably going to redo it once I get around to giving the lizards unique personalities.<br><br>Look at this scenario:<br><br><img src="https://web.archive.org/web/20190719154654im_/http://oi58.tinypic.com/14m9s7.jpg" alt="" border="0"><br><br>Where the mouse is (red little square), the lizard wants to go. But I&#039;ve disabled shortcuts here, so it&#039;s unable to get to the upper part of the level. Instead it should get as close as possible, as mentioned in the note above.<br><br>Now, depending on how I weight the &quot;which tile to check next&quot; heuristic, we get different results. In one version we always prefer checking tiles that are legal to move in first. In that case the whole connected above area will be filled in first, and then start to swell out pretty evenly in all directions. In this case, the blob will first make contact with the lower connected area in the place I&#039;ve marked with blue, and then spread across the floor. This means that the lizard will follow the path to where the blue area is, and then hang out there as that&#039;s to be considered &quot;the closest I can get&quot;.<br><br>Another way to do it is to weigh in proximity to the original goal more. Then the blob of checked tiles will spread pretty evenly outwards from the goal until it hits a mass of legal tiles - then it will spread inside that mass quickly until it catches the lizard. In such a scenario the lizard will go to the red zone and hang out, considering that &quot;the closest I&#039;ll get&quot;. <br><br>Maybe to you the red area seems more correct, as it&#039;s closer, simply. To me too, which is why you see the lizard hanging out there. But you have to have some of the logic that leads to the blue area as well in there if the creatures are to appear intelligent. Imagine a platform that has only one way to get to it; passing through a narrow corridor and then doing a jump. If a creature that is not able to do that jump is supposed to get as close to the platform as possible, you wouldn&#039;t want it to just hang out on the floor underneath it. That would be worthless if it were to for example guard some prey that has escaped to the platform and isn&#039;t supposed to get away from&nbsp; there. Instead you&#039;d want it to hang out in the corridor before the jump. That way it&#039;s perhaps not the closest to somewhere on the platform, but it&#039;s the closest to <i>where you get to there</i>.<br><br>This is the blue-zone behavior. If you look at the blue zone in the picture, you notice that this is the place that where if you were able to climb or fly <i>only </i>a few tiles you&#039;d have access to the entire top part of the level.<br><br>So, now the path finder has these behaviors in it, and balancing between them is as easy as setting a slider between 0 and 1. So maybe different creatures will have a slightly different approach to this, some might tend more towards the one and others towards the other.<br><br>Note that this is just <i>path finding</i>, not <i>AI</i>. The AI will do all the actual thinking and just pass a simple &quot;this is where I want to go&quot; coordinate to the path finder. When AI is up and running, and a prey is climbing around in the unreachable top part of the level, the AI will calculate where the creature would fall if it were to fall, and try to hang out close to that place on the ground below it. So, neither blue zone or red zone. But that&#039;s a later issue, hehe!