JLJac
56

Hi there! Sorry I haven&#039;t been around much lately, there has been quite a lot to do.<br><br>Let me clarify a little what we&#039;ve been thinking about this. Very obviously, moving to another dev environment will set me back. But there are some arguments for it that I find kind of compelling:<br><br>* The three years of development has not been full time, rather it has averaged at something like 1 hour a day. Also it&#039;s not three years - yes, the first prototypes for character movement etc were initiated a little earlier - but then the project rested for some time, and active development didn&#039;t start until early 2012, two years ago. So in the absolute worst case scenario, where it takes exactly as long to re-make the game as it has taken to write it the first time, we get 2 years / 8 which give us about 3 months of full time work. Aaaand...<br><br>* A major chunk of my development time goes towards finding solutions for complicated problems such as path finding, through iteration, and fine tuning animation stuff, through iteration. If I&#039;m porting the game, I wouldn&#039;t need to spend 4 hours determining whether that jump force should be 1.2 or 1.4 by playtesting over and over, I could just grab the number from my old game and move ahead. <br><br>* An undetermined but monstrous amount of time has gone to creating the level editor/renderer. Perhaps we would like to port the level editor too, but it&#039;s not strictly necessary. If the schedule becomes tight we can as well use the old one.<br><br>* Another sizable amount of time has been put towards making art assets for the level editor, and making levels. Some of this work could also be redone if we have the luxury of extra time, but could as well be skipped. A little bit of conversion code could make the old levels/level editor projects work just fine.<br><br>* Anything is better than Director. For three generations I&#039;ve feared that newest version of windows wouldn&#039;t support Director applications. Lingo is a dead language, we need to move to something that we can count on continuing to exist for a few years into the future. Plus, updates, and active help boards on forums! I imagine googling for a problem and finding something else than a post from 2005 with no answer. <br><br>* The things we listed in the kickstarter update. I too like the single room layout, and the game idea is pretty much based around it, so it&#039;ll probably stay. But imagine how awesome to have these things by choice, rather than necessity! Maybe some rooms in the hub world could be a little bigger, with a scrolling screen, to convey scale? Maybe we could have water? Maybe we could have this really big impressive room where 400 flies are swarming? I don&#039;t want to turn this into a gears of war spectacular effects fest - I just want to expand my choices a little bit so I can do the things I want to do without having to worry about how many milliseconds fatter each frame becomes. I&#039;ve always wanted to have dangling chains and plants that move a little as you pass them, but it&#039;s been impossible for technical reasons. I would be super happy if any of it became feasible. <br><br>* Personal development. The current idea is that I would read up on the basics on whatever language we&#039;re moving too, and then sit next to the expert guy as we port it. During the process of us porting it together I&#039;ll learn the new tool. This way we don&#039;t only migrate Rain World to another language, we also migrate <i>me</i>. I already have some experience of different coding languages, and I tend to pick them up fairly quickly. So in the worst case scenario, where we aren&#039;t able to pay this guy for more time than it takes to port the thing up to where we are today, I can jump in and continue development from there myself. If it isn&#039;t the worst case scenario, we could continue to use this guy&#039;s expertise to further optimize the game and overcome technical limitations. <br><br>Right now I can only have 1000 sprites on the screen at a time, and I&#039;ve had to cap the number of lizards at 4 because otherwise it ran too slowly, etc etc. I have managed to work with these limitations, and I have a working game. Also I&#039;m kind of fine with it, because I didn&#039;t intend for this game to be something with 100 enemies on the screen. But it would be cool if I knew that the choices I made was because of artistic license, not technical limitations. Also I trust myself to not put 100 enemies on the screen just because I can haha!<br><br><div class="quoteheader"><a href="https://web.archive.org/web/20150105070755/http://forums.tigsource.com/index.php?topic=25183.msg986484#msg986484">Quote from: dancing_dead on January 21, 2014, 12:45:46 AM</a></div><div class="quote">I don&#039;t think it&#039;ll be that bad at all. Unity is a tricky choice due to its architecture and associated mentality (drag&#039;n&#039;drop before code - some love it, some not so much (I&#039;m firmly in the second camp)), but porting rain world should still be possible.<br></div><br>Hm, that&#039;s a little bit worrying. I want to have as few pre-made solutions for game stuff as possible, actually, because it will only collide with my code and become annoying when porting. I&#039;ve written all my collision logic etc myself, and it&#039;s far from perfect, but it&#039;s custom made and well integrated. I worry that some misaimed helpfulness would only slow me down.<br><br>What do you recommend? I want something that&#039;s easy to learn, performs nicely, but doesn&#039;t come with a load of drag-and-drop stuff and physics engines etc. Just a good clean development environment. We&#039;ve been thinking about AS3 as well, do you think that would be preferable?<br><br>All of this might not even be a problem though, we don&#039;t have the money yet haha!&nbsp; <img src="https://web.archive.org/web/20150105070755im_/http://forums.tigsource.com/Smileys/derek/wink.gif" alt="Wink" border="0"> If we don&#039;t raise enough to do this, I&#039;ll just continue in Director, and we&#039;ll take in a c++ guy to see if he can help us out with some xtras to speed things up or polish them. 