JLJac
94

<b>Update 280</b><br>Hehe wow - when you&#039;ve paved the road with robust solutions it&#039;s amazing how quickly everything comes together in the end. Now I have the path finding and creature abstraction done, it seems! It isn&#039;t throwing errors at me any more! And way too soon, because I haven&#039;t had any time to think about which item to move on to &nbsp;<img src="https://web.archive.org/web/20141223101650im_/http://forums.tigsource.com/Smileys/derek/shocked.gif" alt="Shocked" border="0"><br><br>What I should do is to adapt this whole path finding/abstract space system to accommodate for creature dens as well, so that creatures will be able to go hibernate and the like. But frankly I&#039;m a bit bored by this stuff now, and the dens can wait a little while. <br><br>The next thing that seems reasonable to get to is some kind of generic AI system. That would be the very basics of an AI, the core that&#039;s shared between all creatures. One thing I know this system should incorporate is the &quot;brain ghost&quot; system, where creatures upon seeing other creatures will create a symbol for that creature that can move around with slight autonomy even after the creature is no longer seen. <br><br>This is the core mechanic that makes it possible to trick the enemies in Rain World. If a lizard sees you, it will create a ghost of you, and as long as you&#039;re in its field of vision that ghost will always be fixed at your position. But the moment you get behind a corner, the ghost will start to move based on the lizard&#039;s assumptions of how you&#039;d move (based on things such as movement direction on last visual) and this is your chance. The lizard AI is only ever able to ask for the ghosts position, never the actual player&#039;s. This means that if you&#039;re diverging from the path the lizard assume you&#039;d take, you have a chance to trick it. <br><br>This system is going to be common for all creatures, so that&#039;s something I could get at right away. The problem is that I have a slightly more complex environment this time compared to the lingo build - for example it&#039;s not possible to know how many creatures are going to be in the room and needing ghosts this time around, as creatures are allowed to move freely. Nothing that can&#039;t be helped by an hour or two in the thinking chair.<br><br><hr><br>All of this is just &quot;data collection&quot; though, the system that will provide the AI with the information on which it&#039;ll base its decisions. The decision making process itself is an entirely different matter.<br><br>A <a href="https://web.archive.org/web/20141223101650/http://forums.tigsource.com/index.php?topic=25183.msg1044404#msg1044404" target="_blank">Tree </a>solution was posted a page or two back, and I really liked it. But I&#039;ve also been thinking about a <a href="https://web.archive.org/web/20141223101650/http://gameprogrammingpatterns.com/state.html" target="_blank">Pushdown Automata Finite State Machine</a> kind of solution, where different modes are defined as behavior modules that can be stacked on top of each other. This would basically be a list of tasks, where the topmost item would be handled until it reached a success or failure, in which case the next one would take over. The difference from an ordinary to-do list is that the modules would be self-sufficient classes actually executing the behavior themselves, and also saving their state in case they got postponed, allowing them to pick up where they left off.<br><br>In a way, you could say that the Pushdown Automata is a subsystem of the Tree, as it could be created within the tree if you used a Sequence node and allowed it to be dynamically change its &quot;playlist&quot; during play...<br><br>While I&#039;m rambling, one thing that I don&#039;t quite like with the Tree is that it has the AI character actively <i>try </i>every solution before moving on to the next one. If there&#039;s a lot of walking involved, this could mean that the character could spend several minutes executing some chain of actions where it&#039;s very obvious that the last one won&#039;t carry through. <br><br><img src="https://web.archive.org/web/20141223101650im_/http://outforafight.files.wordpress.com/2014/07/image03.png" alt="" border="0"><br><span style="font-size: 6pt; line-height: 1.3em;">(Images nicked from <a href="https://web.archive.org/web/20141223101650/http://gamasutra.com/blogs/ChrisSimpson/20140717/221339/Behavior_trees_for_AI_How_they_work.php" target="_blank">here</a>)</span><br><br>Say that the &quot;open door&quot; node will return a fail. The NPC will still have walked to the door which might not be a big problem in a small world with fast-paced gameplay. But in a large world Frodo and Sam might set out on their epic pilgrimage for three movies just to arrive at mt. doom and face the fact that they left their mountain climbing shoes back home, and that&#039;s pretty stupid. Potentially you could circumvent this problem by first running through the tree with an &quot;assumption&quot; cursor, which will make an educated guess on whether or not each action in the sequence will succeed, and only do the actual run-through if that&#039;s the case. This sort of defeats the purpose of the architecture though ...<br><br>Another thing to take into consideration is that the tasks the RW AI will handle looks very little like this:<br><br><img src="https://web.archive.org/web/20141223101650im_/http://outforafight.files.wordpress.com/2014/07/selector1.png" alt="" border="0"><br><br>Rain World contains extremely few puzzle-like situations where items are needed to traverse obstacles and the like. This layout is perfect for complex puzzles where several interactions are each unlocking the other until a final goal is reached. <br><br>The problems in Rain World are much more... fluid than this. Each creature is pretty much always free to move to wherever it wants without having to collect any keys or hit any switches. The only things that can restrain movement is being speared to a wall or held by another creature, neither of which there is really anything to <i>do </i>about except wiggle and squirm.<br><br>The Tree solution seems ideal for overcoming geographical obstacles in order to obtain items that can help overcome further geographical obstacles. RW has very little of both these elements, and for NPS&#039;s, almost none. <br><br>So what does a Rain World creature need to think about? It needs to weight many options, none of which are simply &quot;possible&quot; or &quot;impossible&quot;. It needs to do this with limited information as well, being able to account for uncertainty. I imagine a typical rain world lizard problem something like this:<br><br>&quot;I currently see no slugcats. I <i>have</i> seen two on this level though (Ghosts are still in memory). One I saw 240 ticks ago in a position 30 tiles removed from me. The other one I saw 20 ticks ago just 10 tiles away, but it was holding a spear. Which one do I go after?&quot;<br><br>Another might be:<br><br>&quot;Room A have three edible creatures in it, but also a creature that considers me as edible. Room B has just one edible creature in it, but my own skin would be safe. Which one do I go in?&quot;<br><br>My immediate idea is to somehow construct &quot;plans&quot; for what to do, and for each plan calculate a &quot;good idea&quot; value based on the known information.<br><br><div class="quoteheader">Quote</div><div class="quote">Plan: Follow slugcat A! [Slugcat deliciousness: +40pts] [Distance to target: 20 tiles -&gt; -20pts] [Time since I saw this slugcat: Currently looking at it! -&gt; +30pts] [Time till rain: Starting to feel a little uneasy about the rain -&gt; -10pts] Total points: 40pts<br><br>Plan: Follow slugcat B! [Slugcat deliciousness: +40pts] [Distance to target: 10 tiles -&gt; -10pts] [Time since I saw this slugcat: 100 ticks -&gt; -10pts] [Time till rain: Starting to feel a little uneasy about the rain -&gt; -10pts] &nbsp;Total points: 10pts<br><br>Plan: Go home to den! [Time till rain: Starting to feel a little uneasy about the rain -&gt; +10pts] &nbsp;Total points: 10pts<br><br>Decision: Follow slugcat A!</div><br>As the rain got closer, the &quot;go home&quot; option would appear more and more attractive until it became the winner of the evaluation. The main problem I can see with a system like this is that it could lead to flickering back and forth between behaviors without actually carrying any of them through. This could perhaps be circumvented by having the evaluation be delayed for a little while after a decision has been made, but that in turn would make the creature look slow to react in some situations. Maybe the evaluation could be tied to some event...<br><br>What do you think? If you guys want to give me some reading on AI that would be much appreciated! (Looking at you, Gimym JIMBERT)