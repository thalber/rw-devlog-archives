JLJac
63

Thank you all for your super useful advice!<br><br>So, a few hours of unity tutorial later, I feel like unity isn&#039;t my thing. If I made a game from scratch, perhaps, but now I&#039;m porting and restructuring a current game, and everything that makes unity user friendly seems like it will get in my way big time. For example, the built in physics engine (basically a checkbox &quot;yes I want physics on this object&quot;) will most definitely collide with my game. Also I don&#039;t want to drag scripts to objects etc, I want to build a proper inheritance tree with classes (this is what I&#039;ve been missing in Lingo, and I&#039;d like to try it because I think it&#039;ll save me the hassle of writing the same thing over and over).<br><br>My question is this: Is it possible to strip unity of every bit of pre-defined animation handling etc, and only use it for:<br>* Rendering sprites<br>* Handling input<br>* Audio<br>* Debugging<br>Basically I want to create all game behaviors myself, and only use pre-defined stuff for the stuff that isn&#039;t Rain World specific, such as interacting with the OS etc.<br><br>@Gimym JIMBERT<br>I see your point, and I won&#039;t make that mistake. Right now though, it&#039;s a question of what platform I should choose, and if I make the wrong choice I won&#039;t be able to go back, which means that I have to look some distance down the road despite it being premature. If I pick the wrong platform and it turns out the optimization I want to do <i>can&#039;t</i> be done when it&#039;s time to do it - trouble.<br><br>Last optimization question for unity: From how I understand it Unity has a lot of cool optimization and handles some functionality on the GPU, which is from what you guys have said basically free extra performance?<br><br>That&#039;s one hand - Unity does cool technical optimization stuff automatically that I wouldn&#039;t be able to do myself.<br><br>The other hand - Unity does a lot of things I won&#039;t use. Light, physics, cameras that can rotate and zoom, etc etc etc. I feel like I&#039;ve just scratched the surface. All of those things take time, right? Even if I don&#039;t use them, I&#039;m afraid they&#039;ll eat away milliseconds unnecessarily. My game is mostly just 1-bit graphics being stretched and re-colored, and it might be a bad bargain to also have all of them be lit and zoomed etc every frame, without it even being visible. Also some of this stuff might really get in the way, eg can I even rotate a sprite without it being anti-aliased? <br><br>Which of those two hands weight the heaviest? Does the fact that Unity does cool optimized GPU stuff make up for the fact that it also does a lot of cool optimized GPU stuff that won&#039;t even be visible? Or will the net be slower than if I just stripped away everything and wrote my own, clumsier, solutions?<br><br>Or even simpler put: Which is slower? 10000 super professionally optimized functions of which I only use 4, or 4 super clumsily written functions but nothing else?