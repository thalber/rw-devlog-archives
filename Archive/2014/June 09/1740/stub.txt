JLJac
87

<div class="quoteheader"><a href="https://web.archive.org/web/20141223101630/http://forums.tigsource.com/index.php?topic=25183.msg1029570#msg1029570">Quote from: Zaphos on June 09, 2014, 12:18:22 PM</a></div><div class="quote"><div class="quoteheader"><a href="https://web.archive.org/web/20141223101630/http://forums.tigsource.com/index.php?topic=25183.msg1029561#msg1029561">Quote from: JLJac on June 09, 2014, 11:46:38 AM</a></div><div class="quote">I will go harder on the RAM than the CPU when all else equal from now on, then.<br></div>Just want to re-emphasize that this is oversimplified advice ...<br><br>Accessing your RAM can cost on the order of ~100-300 clock cycles if it&#039;s not already in your L1 or L2 cache.&nbsp; You likely have &gt;1GB of ram to work with but maybe only ~256kb of L2 cache per core.&nbsp; If you precompute a lot, you need to consider how you access what you&#039;ve precomputed, as that determines how often you&#039;ll get cache misses when accessing it.<br></div>Tell me more! Do I even have that kind of control in c#?<br><br>@Lee, given that Futile uses polygons to display the sprites, what would be the big difference between my current setup and &quot;2D texture planes&quot;? In Zaphos gif you see 30 2D texture planes, essentially. If you&#039;re talking about having pixel art textures and make actual 3D models I&#039;m pretty confident I don&#039;t want to do that, both because of the mentioned reasons and because actual 3D models would change the art style. I think the current art style goes better with the characters, and wouldn&#039;t want to change it for 3D. <br><br>When it comes to tile based approaches, I&#039;m not too keen on those either, as the very point of this visual experience is that everything should be molten to a mess. If you guys can see potential to cut it up into tiles, that means it&#039;s not eroded enough!&nbsp; <img src="https://web.archive.org/web/20141223101630im_/http://forums.tigsource.com/Smileys/derek/wink.gif" alt="Wink" border="0"><br><br>The main point here is that the 30 layers are here to stay. I could perhaps cut them up into smaller pieces or something, but the basic issue that the file sizes would be huge and the implementation nightmarish remains. <br><br>I know for a fact that it would be considerably heavier performance wise, if I do it as separate sprites, as a shader, or whatever solution I come up with. And I also know that I would prefer to put those extra processor cycles towards AI and actual gameplay aspects rather than a very superficial cosmetic. With stuff like parallax scrolling people tend to go &quot;ohh, cool&quot; the first time they see it, but it wears out pretty quickly. Being able to create a greater diversity of gameplay scenarios (15 lizards in a pit or something) seems more worthwhile. So while I&#039;d like a moving camera, I kind of don&#039;t see how it would be worth it, especially as I think a static camera could be <i>made </i>to work.<br><br>That said, I might very well try to implement it some time along... Especially if we do split screen, the cameras will have to scroll <i>either way</i>, and then it might become worth it to really go that extra mile to make it look good. As you&#039;ve probably noticed I&#039;m not very focused in my work, I jump back and forth and return to stuff every now and then. Because I&#039;m the only developer I think I should use the luxury to be able to work like that - and also it might make the devlog a little more entertaining. So if I get a sudden idea, or if someone presents the perfect solution, I could jump back to the parallax any day.<br><br>Oh, and don&#039;t censor yourself, the idea of the thread is to talk to people with ideas and opinions! 