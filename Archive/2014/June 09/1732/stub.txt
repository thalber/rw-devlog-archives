JLJac
86

Thanks guys! I will go harder on the RAM than the CPU when all else equal from now on, then.<br><br>On the parallax thing - yeah, that gif Zaphos posted. You can kind of see how you can&#039;t really bake that together into just 4 layers or something like that - it&#039;s not the classical &quot;some mountains at different distances,&quot; rather it&#039;s a voxel-like solution compromised of parallax layers. Rendering each tile by itself wouldn&#039;t really be feasible even if the 70 000 sprites were to work - the effects such as erosion are applied to the image as a whole, not to the individual tiles. In fact the effects are there for just that reason, to make the tiles melt together into a whole.<br><br>Making the game actual 3D is theoretically possible, but I want to use the same level editor and assets as I already have. I really like the look of it, more perhaps than actual 3D. And as James says, that would be like making another entire game from start <i>again</i>, pretty much, this time with a technique I&#039;m totally new to.<br><br>So...<br><br>In honor of my habit of jumping between different task like a 4 year old, we now give the parallax some rest in favor of AI!<br><br><b>Update 252</b><br>I now have a class for mapping the shortcuts of a level, and for doing the AI map. This is a good healthy step forward, as the AI map is the foundation of the path finding the next thing I can start with (after setting up a lizard entity, which is a pretty small task) is actual path finding code. From there on everything will become inferno, but let&#039;s not live tomorrow&#039;s sorrows. <br><br><a href="https://web.archive.org/web/20141223101639/http://imgwiz.com/images/2014/06/09/L7Vv.png" target="_blank"><img src="https://web.archive.org/web/20141223101639im_/http://imgwiz.com/images/2014/06/09/L7Vv.png" alt="" width="400" height="300" border="0"></a><br><br>This AI map has most of the paths the lizards will use, though not the pup-specific paths such as horizontal jumping, though that&#039;s easily added later. The tiles are color coded according to a hierarchy, floor(green), vertical corridor(yellow), pole climbing(pink), wall climbing(blue), and ceiling climbing(red). The beauty of this hierarchy is that it&#039;s a linear increase of difficulty of terrain, any creature that can be in a pink tile for example, can also be in a yellow or green one. Ceilings and walls are reserved for the sticky toed breeds of lizards. <br><br>The little dots represent paths that can be taken by different creatures. The little red ones pointing downwards for example symbolize that from here you can drop down and land on a floor. Pink downwards dot means that from here you can drop down and grab hold of a pole mid-air, if you&#039;re a creature with that kind of agility. <br><br>As you see, this map limits the areas the path finder has to handle - there are few big open chunks of tiles where the path finder would chew away more slowly.<br><br>Oh, and the mapper classes. What&#039;s cool about those are that they are asynchronized. In this version we&#039;re playing with the idea of split screen coop, and that means that as one player moves from one room to another, the show still has to go on for the other. We don&#039;t have the luxury of pausing everything and wait for it to load.<br><br>Instead, when you start to enter a room these mapping classes will fire, and work in the background. As soon as they&#039;re finished they serve their room the product of their work, and the reference to them is nulled so they can be disposed by garbage collection. There will still be a small pause for the player moving from one room to another (unless I come up with a clever preloading system) but the other player can keep playing.