JLJac
87

Does this have to do with multithreading? o_0 Talking of which, should I perhaps use multithreading for something? Like mapping the levels, or pathing? It seems like a waste to have all these processors just sitting there... But I figure the compability between different hardwares would take a hit.<br><br>Thanks for the AWESOME a* link! For my game I need super control of the pathfinding, as the AI taps into it quite a lot it can&#039;t be as encapsulated, so I won&#039;t use this code as is. That said, reading the code is extremely interesting. It seems the implementation is in fact very similar to mine, which maybe isn&#039;t that big of a surprise seeing how A* is pretty tried and true. But he does some things that are pretty awesome - for example he doesn&#039;t use a multidimensional array, instead he uses a linear one and fetches the right position like this<br><br><div class="quoteheader">Quote</div><div class="quote">arrayIndex = thisX + (thisY + thisZ * worldTotalY) * worldTotalX</div><br>which I guess would be because of the cache optimization thing you guys mentioned earlier?<br><br>Oh, and he doesn&#039;t store the open nodes as a sorted list, but as a <i>heap</i>. There&#039;s something here I&#039;m not getting, as he doesn&#039;t seem to keep track of the already evaluated nodes, instead he just have the linkage mechanic of the heap structure organically flow over into creating a linked <i>path </i>somehow... Soooo cool.