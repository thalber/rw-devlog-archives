JLJac
97

Thanks! Yeah, there was a little bit of that in the old version. I don&#039;t want it to be too agonizing to watch them when injured, after all it&#039;s sort of unclear whether they are actually creatures like us capable of pain, but they should certainly react to injury in their behavior&nbsp; <img src="https://web.archive.org/web/20141227124052im_/http://forums.tigsource.com/Smileys/derek/hand-thumbsup-r.gif" alt="Hand Thumbs Up Right" border="0"><br><br><b>Update 295</b><br><br>Oh wow. Today was spent in vain. But it was awesome! But it was in vain. Basically I did what I do best, spent way too much time on monstrously complex AI machinery that no-one will ever notice.<br><br>Remember yesterday, when I talked about an obstacle tracker for other game objects? That&#039;s what I did, basically. The idea is pretty simple: On a &quot;movement failed&quot; call, first check if you have collided with any other creatures these last couple of frames. If so, don&#039;t write to the obstacle map (the one showed in the last post, where the lizard was able to figure out that climbing wasn&#039;t going to work after a couple of tries), but instead call the Obstacle Object Tracker, telling it which object you were supposedly blocked by.<br><br>The Obstacle Object Tracker has a list of suspected obstacle objects. It checks against that list, and if the object is already in there, it adds to a Reports integer. After a certain number of reports, the object is moved to the Confirmed Obstacles list. If it&#039;s not on the suspects list, it&#039;s added to it. All the suspects on the list that were not the right one this time around get a Lifetime counter decreased, and when it hits zero they are forgotten.<br><br>Whenever the path finder is asking a tile for its pathing cost, the Confirmed Obstacles list is checked, and if any of them are hanging out in that particular area, the cost is increased.<br><br>Simple enough!<br><br>Then it comes to my no omniscience purism. Say I&#039;m a blue lizard. On my Confirmed Obstacles list is a green lizard, I&#039;ve bumped into him 5 times and am frankly a bit tired of him, so whenever I&#039;m pathing around the level I&#039;d prefer not to run in to him again.<br><br>But... It was 240 frames ago since I saw him. And the creator of this little universe doesn&#039;t like omniscient AI, so I can&#039;t just ask the game engine for the position of the green lizard. Contrary, I have an AI component used for just that, the Tracker from a few pages back. I can ask the tracker where I <i>think </i>another creature is, but never ask for its position straight up. <br><br>So the Obstacle Object Tracker needs to be hooked up to the Tracker, with each object on the Confirmed Obstacles list having a reference to a Tracker ghost, so it can use that creature&#039;s supposed position when asking what tiles to avoid.<br><br>Problem is, that I don&#039;t want to have every creature track every creature - some creatures are not interested in each other as neither eat the other, and it would be total overkill for all of them to run 12 ghosts for every other for no reason. So I needed to make it so that when an object is moved from the Suspected Obstacles list to the Confirmed Obstacles list, the Tracker gets a call. The Tracker looks through its ghosts, and if it finds one for the obstacle creature, it returns it to the Obstacle Object Tracker to be stored. If it doesn&#039;t, the &quot;A creature has been spotted&quot; method is called, and a ghost is created and returned. In short, the tracker will start tracking that creature despite it being disinteresting because it has become interesting in the role of a physical obstacle to avoid.<br><br>[/insanity]<br><br>This means, if we return to the blue and the green lizard, that at this point a blue lizard can chose another path to its target because it&#039;s dodging a <i>misconception </i>of where it expects the green lizard to be. o_0<br><br>Do you think this comes across to the player? Hahahahahaha nooooooo it doesn&#039;t. But it was fun, and now it&#039;s in there, useful or not. At least it has helped dissolve huge knots of lizards being stuck in each other.<br><br>It does create some cool behavior though. When a big bunch of lizards are moving towards you, some of them will strategically take alternate routes as to not get stuck behind the crowd. This indirectly leads to some surrounding behavior that can be pretty nice. But boy, could it be done with simpler methods&nbsp; <img src="https://web.archive.org/web/20141227124052im_/http://forums.tigsource.com/Smileys/derek/cheesy.gif" alt="Cheesy" border="0">