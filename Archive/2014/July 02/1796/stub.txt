JLJac
89

<b>Update 263</b><br>After getting the path finding to a state that could basically be considered &quot;working&quot; yesterday, I decided to take it to the next level today.<br><br>This idea was applied to the pups in the old build, but this time I wanted to generalize the concept so it&#039;d be available to all path finding creatures. <br><br>Now the path finder is able to find paths that are not actually possible for the creature to follow. <i>Why</i>? Because sometimes you might want to have a behavior where a creature gets as close as possible to a certain place, without actually being able to reach all the way there. An example would be a pup trying to follow you, but there&#039;s a gap which it&#039;s unable to jump across. Then you want it to walk all the way up to that place where it&#039;s unable to get across, and then wait, rather than just not moving at all because the path finder tells it it&#039;s impossible. Another example would be if you&#039;re on a platform and there&#039;s a lizard under it that isn&#039;t able to get up to you. In the old build the lizard would just forget about you, but with this functionality it will still try to get as close as possible and hang out in the general area, despite actually getting to you might be futile.<br><br>The system also allows creatures to know whether the path they&#039;re following is actually going to get them to the goal or not. This info will be usable to the AI - say that you have a lizard camping out under a platform with a player and another player shows up, just next to it. Then the lizard will be able to prioritize the player it actually has a chance to get at, because it knows that the other path it was following was a dead end.<br><br>The system works by not only weighting pathing costs as 1D floats, but by having another &quot;legality&quot; parameter to them as well. So if we have a ground dwelling creature that&#039;s trying to get from A to B, the path finder will exhaust <i>every </i>possibility that&#039;s only passing through ground tiles before starting to path through the air. If exhausting every possibility there as well, it will start to look for paths through solid walls. Once a path is found it will be followed as far as possible.<br><br>The system also has a category for moves that are possible, but not preferred. For example the lizard <i>can </i>move backwards, but it will consider every other possibility of getting to the destination first. Another creature might be able to drop from high distances, but have an aversion for it, and so on.<br><br>Note that this behavior isn&#039;t always going to set in. I&#039;m just making it available for the AI to use. For example we won&#039;t have every annoyingly lizard camp out under platforms you&#039;re on for ever, bringing the game to a stalemate. In most situations the AI will get tired of that pretty quickly and go look for something else to do. But it&#039;s nice to have the behavior available, especially for possible future friendly NPCs.