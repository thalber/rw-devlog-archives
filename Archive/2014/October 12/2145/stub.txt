JLJac
107

The slightly weird mechanic is because I&#039;ve been prepping for a potentially very large world. Each room will keep track of what time it was when it had its last update command, and when it get a new one it&#039;ll calculate a delta which is passed down to the abstract creatures. The creatures will use that to increment their counters and to calculate some chance-based stuff, such as the probability of two creatures in the same room encountering each other. For example, if a creature wants to move out an exit it needs to wait a corresponding amount to the distance to that exit before it can do the move. This way the idea is that the abstract world will be able to function even at a very low or irregular update rate, which might be cool if the world is large and we want to update areas close to the player with a finer granularity. This is also why the room owns the &quot;evenness&quot; parameter - all rooms are not updated at the same time with the same evenness, that&#039;s the idea of this whole architecture.<br><br>Yeah, carried creatures might or might not get an update - but as you say, they don&#039;t have much agency so that&#039;s perhaps not a big problem. What&#039;s worse is the other one you mention, that a creature could potentially surf a wave of updates by moving between rooms. From a strict gameplay perspective I don&#039;t think it would matter all that much (all of the abstract space feels pretty fuzzy to the player) but from a purity standpoint it feels pretty bad, yeah.<br><br>Maybe I could move the &quot;keep track of how long ago I got my last update&quot; down to the creature level instead... That way they could get two updates quickly after each other, but the second one wouldn&#039;t really have any &quot;juice&quot; to it as the calculated delta would be very small. <br><br>What is it, saving the milliseconds since 1970 is just a long int right, and that&#039;d be just the same size as 2 regular ints? So saving time as 40ths of a second would be pretty mild on the memory and without any risk of the ints actually hitting the ceiling?