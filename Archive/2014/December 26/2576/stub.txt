JLJac
128

Hahaha yeah, I&#039;ll send you a build soon! Should just make it so that you can place snails in the world first.<br><br>Also, <b>programming architecture question</b>:<br><br>I&#039;m doing kind of a modular thing here, mostly when it comes to AI, where there&#039;s a pool of AI plugins that creatures can pull from - for example, path finding, threat tracking, prey tracking, rain clock, etc. The creature AI classes have some stuff going on in them, but mostly they act as a coordinator for these modules. &quot;My prey tracker says there&#039;s some juicy prey over there! Path finder, find a path to there!&quot; ~ like that.<br><br>Recently I&#039;ve found myself wanting to give each of these classes an interface to go with it. Example. Today I implemented a class that allows a creature to look at other creatures - basically direct its gaze for cosmetic purposes. So it&#039;ll do a little evaluation of what other creatures it can see, which ones of those are the most interesting, etc. <br><br>So now I have the CreatureLooker class, and then a critter such as a lizard can have an AI that owns an instance of CreatureLooker. LizardAI can of course call functions and get publics in CreatureLooker, so communication that way is no problem. But sometimes CreatureLooker wants to ask LizardAI something as well ~ such as &quot;As a float, how interesting do you find this particular creature?&quot; to which the LizardAI can respond &quot;I&#039;m actually currently hunting that creature, so give it a super high value in the evaluation because I should probably turn my head towards this creature as I hunt it&quot;.<br><br>Please excuse the super silly dialogues, I find it easiest to explain that way.<br><br>As I have it set up now, there is the CreatureLooker class and the ILookingAtCreatures interface, and if LizardAI wants to own an instance of CreatureLooker it has to implement ILookingAtCreatures so that CreatureLooker can call HowInterestingIsThisCreature on it.<br><br>This works fine, and I keep the CreatureLooker and ILookingAtCreatures in the same file so it feels decently contained. But I just feel that there should be some even neater way to create two-way communication between classes. It bothers me to create both the class and the interface when in fact I never want the one to exist without the other. Is there some way to contain this functionality in just one single unit?