JLJac
63

When I look at the tutorials, I see a million things that makes me worry that they are unnecessarily performance heavy. Like, what I want to do is draw my characters from 20 different 1-bit 2D sprites, that are all moved from the same object instance in the code. In Unity they make sprites by creating a 3D box, giving it a &quot;material&quot; and then applying a graphic and a bunch of behaviors to it. They set an &quot;ambient light&quot; to 255, 255, 255 so that the sprites will have their natural colors, but I can&#039;t help feeling that that &quot;light&quot; function is still multiplying its color to every pixel every frame, even though it&#039;s invisible, and that makes me uncomfortable. <br><br>I want to use a much cleaner environment, not a 3D klick&amp;play. But I&#039;d still be up for using the debugging and structuring of assets etc that Unity seems to have. Problem is that I kind of need a real tutorial to get started, I can&#039;t figure everything out by myself. And the tutorials really seem to lean to the &quot;user friendly&quot; side.<br><br>I&#039;ll check out Futile, thanks! Using FixedUpdate and make one big game loop is obviously the way I want to go, if I understand this correctly - is there any turorial for that? Like, I don&#039;t want to drag any objects to the screen, I want to write a big game function that branches down into everything ~