JLJac
101

<b>Update 310</b><br>So I got some flight behavior up and running. The core mechanic is an engine that can identify a &quot;threat level&quot; for any given tile, like so:<br><br><img src="https://web.archive.org/web/20141229083422im_/http://imgwiz.com/images/2014/09/18/cGEXi.gif" alt="" border="0"><br><br>Sorry about the coloration in these ones, it&#039;s a bit unintuitive as I didn&#039;t invert the hues. Red is <i>less </i>threatening, and blue is very threatening. The map is generated by a combination of straight distance and dijkstra triangulations.<br><br>The system supports many different threats which can be assigned separate severity. In this next gif there&#039;s one threat emitter assigned to the mouse pointer and another stationary - they tend to melt together if they get close.<br><br>The dead end map is consulted as well - you might notice how some tiles are always considered a bit threatening. Basically dead end tiles get a &quot;bonus&quot; on their threatening level.<br><br><img src="https://web.archive.org/web/20141229083422im_/http://imgwiz.com/images/2014/09/18/3Sxmi.gif" alt="" border="0"><br><br>The flight behavior consists of picking an (accessable) coordinate every frame, and comparing it to the current destination of the path finder. If the new point is less threatening than the last one, the new one is assigned. There&#039;s a 50% chance to evaluate one of the pre-baked &quot;hub spots&quot;, otherwise it&#039;ll pick a coordinate from anywhere in the room. I&#039;ll also have it consider exits here later, making the creature able to flee from the room rather than just within it.<br><br>The path finder assigns a harsh cost to tiles that are considered threatening, meaning that the paths will take detours to avoid them. I have an exponential formula to this, making it almost impossible for it to path through a threat area.<br><br>Here&#039;s a blue lizard feeling very afraid of the mouse pointer.<br><br><img src="https://web.archive.org/web/20141229083422im_/http://imgwiz.com/images/2014/09/18/j9QRJ.gif" alt="" border="0"><br><br>The lizards are not good at crawling backwards, and avoid it for the most part, but if they have a nearby threat right in front of them they&#039;ll back up. This will activate a &quot;panic mode&quot;, lasting a second or so, where they won&#039;t path to any specific target, but just move to whichever nearby tile is considered the least threatening. <br><br>The system is perhaps not perfect, but I think it&#039;s good enough for most purposes. The goal here isn&#039;t as much to create an actual super efficient fleeing behavior as it is to communicate <i>that </i>the creature is trying to escape. From a game fun perspective it is probably always more fun for a non-player entity to actually bite the grass rather than successfully getting away (Action happens! Something gets eaten! And it wasn&#039;t you!) so as long as the behavior doesn&#039;t look frustratingly stupid I&#039;m happy with it. Now to contemplate what to do next... Flies?