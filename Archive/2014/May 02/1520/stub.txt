JLJac
76

Hm, ok, so here&#039;s what I&#039;m trying to do:<br><br>A standard room is about 1040*800 pixels big. I want to be able to have a level that&#039;t at least three times that size as well, or variable room size isn&#039;t really worth it.<br><br>If I&#039;m having variable room size, I need to have a movable camera, obviously. If I&#039;m having a movable camera, I want parallax scrolling.<br><br>Each room consists of 30 bitmap layers (with very few colors) that has previously, in the static camera build, been baked together as one image at level generation. My dream was to in this new version have all those 30 layers move about as parallax scrolling layers when the camera moved. It didn&#039;t seem so impossible - if crysis can be crysis I can have 30 pretty big 2D sprites move around, right?<br><br>Because I wanted the dynamic shadows as well, I wanted all layers to be in one texture. That way I&#039;d be able to check in say layer 28 if it&#039;s being shaded by say layer 27 by simply asking different coordinates in the same texture for whether or not they&#039;re transparent.<br><br>So I went ahead and stacked all the layers on top of each other in a texture, and 800*30 = 24 000, so that&#039;s considerably bigger than the limit.<br><br>And now I think I have to figure out some other way to do this haha &nbsp;<img src="https://web.archive.org/web/20150108074812im_/http://forums.tigsource.com/Smileys/derek/cheesy.gif" alt="Cheesy" border="0"> Maybe I&#039;ll have to drop the parallax scrolling after all, and go with some pre-baked solution - can can still save a depth map for the room graphic and use that to do the dynamic shadows, so all is not lost!<br><br>Edit: Oh, and yeah, I can save each layer as its own texture, but that would make each room a 32 file, 2 megabyte monster, so I&#039;d prefer not to. My talk about a custom file format is because most pixels actually don&#039;t change from layer to layer, so if I wrote my own compression algorithm that worked on the z-coordinate I could probably get the filesize down some, but I&#039;d still need to unpack it for unity, so it wouldn&#039;t really solve anything.