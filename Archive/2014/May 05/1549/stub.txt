JLJac
77

Thanks guys! That&#039;s certainly an option, but the thing is that I already have this 30 bitmaps thing set up - that&#039;s how the level editor works already, except it bakes them together. Making it proper 3D would be an entirely different animal all together. I still have issues accepting that 30 sprites with somewhat high-res textures can be an actual issue when Crysis can do entire islands with a bazillion polygons of rain forest and stuff, but I&#039;ll take your word for it.<br><br><b>Update 132</b><br>So I had a talk with James, and we decided that before I got manically obsessed with making this tiny little parallax effect work, I could probably follow through on a fixed-screen approach. Especially as we&#039;d most reasonably want both solutions in the game anyway even if I managed to make the parallax work, so we could fix the screen in performance heavy rooms and save the parallax for cinematic set pieces.<br><br>So, I&#039;ll abandon parallax scrolling for a while in favor of importing 2D backgrounds. In the final spasms of my parallax obsession, I gave the pixel-raytracing some time, and for a wile it looked bright because a 30 iteration for-loop in the fragment shader actually didn&#039;t murder the framerate as badly as I feared. But then some <i>stupid </i>stuff came in the way, namely that in Unity the CG compiler always unrolls all loops (stupid, but necessary on older cards if I got it right) and then if I do some operation in the for loop it assigns <span style="text-decoration: underline;"><b><i>new temporary variables for each iteration</i></b></span> (STUPID, NO EXCUSE) which maxes out the shader&#039;s tiny little working memory and keeps it from compiling.<br><br>So there I was, at a road fork, where one option was to learn the thing that graphical C compiles to (looks like this: <br><div class="codeheader">Code:</div><div class="code">add r8.xy, t0, c0<br>add r7.xy, t0, c2<br>add r5.xy, t0, c3<br>add r2.xy, t0, c4<br>mov r0.y, c1.w<br>mov r0.x, c1.z<br>add r9.xy, t0, r0<br>mov r0.y, c2.w<br>mov r0.x, c2.z<br>add r6.xy, t0, r0<br>mov r0.y, c0.w<br>mov r0.x, c0.y<br>add r4.xy, t0, r0<br>mov r0.y, c3.w<br>mov r0.x, c3.z</div>seems to be polish notation and similar horrors)&nbsp; and the other was to decide that f*ck it, for now at least. So I&#039;m trying to convince myself that #2 is the way to go.<br><br>I&#039;ll probably still get some good opportunity to pull my hair over shaders, if I&#039;m going to do the coloration and the light stuff as a shader.<br><br>Before we leave the parallax issue, for now, I&#039;ll give you the the most current version of the &quot;30 files, 30 sprites&quot;-solution, to give you an idea of what could&#039;ve been and might actually be if I get back to it later.<br><br><img src="https://web.archive.org/web/20141230122801im_/http://imgwiz.com/images/2014/05/05/kYIHv.gif" alt="" border="0">