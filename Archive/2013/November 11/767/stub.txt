JLJac
38

Thanks guys!<br>So, when you back a game on kickstarter, is it about the things <i>you </i>get from doing that, or is it about bringing the game into existence? If, for example, I were to kickstart it to support myself during development, and then release it for free when I got done, would that be a good deal? Or would you think &quot;But <i>I</i> payed! Why is everyone else who didn&#039;t pay also rewarded?!&quot;<br><br>The way I understand it to work in most cases is like what Johnki mentions, you kickstart it and thereby pre-book it, some times with early access. If I were to kickstart something that would later be released for free, it would be the exact same situation for those who pay, with the difference that you don&#039;t get any special privilege for paying - you could as well just wait and hope for other people to pay. Would that be a huge turn off? What about donators getting the game a little bit earlier than the rest of the people? Would that work? I&#039;m kickstarter illiterate, so I&#039;d be happy if anyone with a little more knowledge of the psychology behind it could tell me what&#039;s up&nbsp; <img src="https://web.archive.org/web/20141230111513im_/http://forums.tigsource.com/Smileys/derek/smiley.gif" alt="Smiley" border="0"><br><br><b>Update 200</b><br>200! Woooo!<br>About halway through making the pup follow the paths the pathfinder finds. The code for just going to the next tile and the next tile is done, but what&#039;s lacking is some specific movements, such as jumping up and grabbing a horizontal beam etc. Those actions have to be programmed event-by-event, and they have to be able to interrupt at any point without something too bad happening. The environment is unreliable, and sometimes another creature will push the pup mid-action, in which case it needs to be able to pulling itself together and start acting accordingly to its new situation. <br><br>For example, the &quot;jump up and grab&quot; animation is done in two steps - but it&#039;s not as simple as an animation. If everything was just some kind of linear animation, weird things like being pushed and pulled in different directions wouldn&#039;t be accounted for. Then it could end up stuck somewhere, because the AI can&#039;t think about anything else but &quot;I should have grabbed on to that beam by now! Where is the beam??&quot; That would be a bad hopeless situation. Rather, the pup has to position itself on the tile, and decide that &quot;now I will do the jump and grab thing&quot;. Then it has to jump - <i>and not forget what it was doing</i>. It knows what tile it&#039;s going to jump to, keeping that in mind too. During the jump it&#039;ll check if it&#039;s in the right tile, if so, it&#039;ll go into the &quot;grabbing&quot; mode, and the animation is over.<br><br>But, it doesn&#039;t know when that&#039;s going to happen, or even if it&#039;s going to happen. It&#039;s not counting frames. When it jumps, that&#039;s a leap of faith. It could be 4 frames until safely grabbing the thing, or it could end up not happening. It&#039;s an adventure, baby.<br><br>If something weird happens, it&#039;ll end up in another tile, and ask the pathfinding what to do. As soon as it gets a clue, it&#039;ll start moving according to the new situation.<br><br>Dynamic AI like this is an asset to rain world, because it allows for a lot of fun interaction. The lizards already use similar stuff. For example, all the creatures in the game (except the flies) collide with one another, which enables stuff like lizards pushing at each other as they&#039;re both hurrying to get into the same small opening. And things like one lizard throwing out its long sticky tongue against the player, but missing and latching on to another lizard instead, pulling it in some weird direction. For stuff like that the AI has to be able to re-consider its situation dynamically. Hopefully the pup will tie in nicely with those Interactions.