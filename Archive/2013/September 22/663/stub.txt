JLJac
33

<a href="https://web.archive.org/web/20141228124136/http://forums.tigsource.com/index.php?action=profile;u=44008" target="_blank">Barch</a> asked me a question for a lecture - on how I developed my style. Here&#039;s my reply. Nothing new under the sun for those of you who have been around a while, but it might be interesting as a short summary of what I&#039;m doing for those of you who have just arrived and are not too eager to scroll through 45 pages of devlog.<br><br>The game started with only the player character, as an experiment on how a character could be rendered and controlled more dynamically while still looking like pixel art. <br><br><a href="https://web.archive.org/web/20141228124136/http://forums.tigsource.com/index.php?topic=22849.0" target="_blank">http://forums.tigsource.com/index.php?topic=22849.0</a><br><br>The game is then built around that character. <br><br>Most platformers have characters that are just boxes, and I think that even if you paint non-box graphics on top of the boxes it&#039;s still perfectly evident from the movement that it&#039;s still just boxes. I wanted to try something else.<br><br>The world building aspect came later. As the creatures are fairly complex to render, some of them consists of more than 20 sprites, and as lot of processing power is used for AI, I didn&#039;t have much left for rendering scrolling levels or anything similar. Because of that I created a level editor that renders levels as still images. This turned out to be a good thing, because as I didn&#039;t have to render the levels on the fly I could make the rendering process as complex as I wanted. The downside to this is of course that the levels are completely static.<br><br>I have deliberately not been having a creative deisgn process that&#039;s separated from the technical development. This is because if I were to first design a game and then try to code it, there would be a lot of places where the code or my skills with the code weren&#039;t sufficient to create what I had designed. The final game would be a watered down version of what I had in my design document.<br><br>Instead I&#039;ve allowed creative decisions to be influenced by technical limitations as well as having technical solutions serve the creative decisions. This is what&#039;s fun in making games according to me - having creativity and problem solving work together. Technincal limitations can actually sometimes boost my creativity.<br><br>Another important part of what makes my project what it is would be that I don&#039;t believe art and code can be separated. Many games work with an artist / programmer division in their teams, but as I&#039;m doing this alone I can float freely between the two roles, which I think has played to my favour.<br><br>Programming is creating behaviours, and I think it&#039;s a bad idea to keep how something behaves separate from how it looks. How something, such as a creature, looks is what will give you the first impression of what it is. How it behaves is what will let you know it even more, what will make you understand it under the visual surface. But it&#039;s still the same creature. Looks and behaviour should be telling the same story, I believe. So maybe it&#039;s not such a good idea that they most often are created by different people, in different rooms, at different occasions?<br><br>In my game I&#039;ve tried to make the gap between graphics and behaviour as narrow as possible. My ideal state is when the graphics and the behaviour of an object are inseparable, how it looks is how it moves. <br><br>To underline this ideal further (and for technical reasons, of course) the creatures in the game look very simple on a still image. Most of them have only one or two flat colors and consist of fairly simple shapes. What gives them character is their movement and behaviour.<br><br>In the end I think my goal is to create the illusion that these things are alive. I&#039;m fairly certain that I share this goal with most people making games, as it&#039;s an important factor in immersion. Working with behaviour to create that illusion is a path I think is worthy of experimentation - and rain world is my take on such an experiment.<br><br><b>Update 180</b><br>Quite a lot has happened, so much actually that I don&#039;t quite remember everything I&#039;ve done since last time. Mostly little details, like adding small spark effects when throwing a rock at a wall, and little bug fixes. The big change is that the shortcuts now look different, in yet another attempt to make it more clear where there are shortcuts, and where they go.<br><br>Also I&#039;ve been changing a few things in how waves mode work. Now if you die, every lizard will go back in its hole and then you&#039;ll respawn to an empty level. Then it will initiate the same wave you were already on, again. This is because earlier you&#039;d respawn with lizards still on the screen, and in quite a few cases they would be hanging around way too close to your spawn hole for it to be fair. 